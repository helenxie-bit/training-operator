name: E2E Test with train API

on:
  - pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
    e2e:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                kubernetes-version: ["v1.27.11", "v1.28.7", "v1.29.2"]
                python-version: ["3.8", "3.9", "3.10", "3.11"]
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Free-Up Disk Space
              uses: ./.github/workflows/free-up-disk-space

            - name: Setup Python
              uses: actions/setup-python@v5
              with:
                python-version: ${{ matrix.python-version }}

            - name: Setup Go
              uses: actions/setup-go@v5
              with:
                go-version-file: go.mod

            - name: Create k8s Kind Cluster
              uses: helm/kind-action@v1.10.0
              with:
                node_image: kindest/node:${{ matrix.kubernetes-version }}
                cluster_name: training-operator-cluster
                kubectl_version: ${{ matrix.kubernetes-version }}

            - name: Build training-operator
              run: |
                ./scripts/gha/build-image.sh
              env:
                TRAINING_CI_IMAGE: kubeflowtraining/training-operator:test

            - name: Deploy training operator
              run: |
                ./scripts/gha/setup-training-operator.sh
              env:
                KIND_CLUSTER: training-operator-cluster
                TRAINING_CI_IMAGE: kubeflowtraining/training-operator:test
                GANG_SCHEDULER_NAME: "none"
                KUBERNETES_VERSION: ${{ matrix.kubernetes-version }}

            - name: Run tests
              run: |
                python3 -m pip install -e sdk/python[huggingface]
                ./sdk/python/test_e2e/test_e2e_train_api.sh
                kubectl get pods -n default
                POD_NAME=$(kubectl get pods -n default -o jsonpath='{.items[0].metadata.name}')
                kubectl describe pod -n default $POD_NAME
                kubectl get pvc -n default
                PVC_NAME=$(kubectl get pvc -n default -o jsonpath='{.items[0].metadata.name}')
                kubectl describe pvc -n default $PVC_NAME
                exit 1
